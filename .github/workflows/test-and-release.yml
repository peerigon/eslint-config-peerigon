name: 🧪 Test and 🚀 Release

on:
  push:
    branches:
      - main
      - beta
  pull_request: {}
  workflow_dispatch: {}

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-release:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    strategy:
      matrix:
        node-version: [ 18.x, 20.x ]

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@f095bcc56b7c2baf48f3ac70d6d6782f4f553222 # pin@main
      - name: ⎔ Setup node
        uses: actions/setup-node@869f4dd0c7f320ae834c2724d92a364de3893c24 # pin@main
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: 🗄 Cache node_modules
        id: cache-node_modules
        uses: actions/cache@04f198bf0b2a39f7230a4304bf07747a0bddf146 # pin@main
        with:
          path: "**/node_modules"
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: 📥 Install dependencies
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: |
          npm ci --ignore-scripts
      - name: 🧪 Test
        run: |
          npm test
        env:
          CI: true
      - name: 🚀 Release on npm
        if: ${{ contains(' refs/heads/main refs/heads/beta ', github.ref) && matrix.node-version == '20.x' }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run release
